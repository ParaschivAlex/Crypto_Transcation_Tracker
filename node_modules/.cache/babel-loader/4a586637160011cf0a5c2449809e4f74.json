{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useAuthContext}from'./useAuthContext';import{prjAuth}from'../firebase/configfirebase';export var useLogout=function useLogout(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isPending=_useState4[0],setIsPending=_useState4[1];var _useAuthContext=useAuthContext(),dispatch=_useAuthContext.dispatch;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isCancelled=_useState6[0],setIsCancelled=_useState6[1];var logout=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setError(null);setIsPending(true);_context.prev=2;_context.next=5;return prjAuth.signOut();case 5:dispatch({type:'LOGOUT'});//update\nif(!isCancelled){setIsPending(false);setError(null);}_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](2);if(!isCancelled){console.log(_context.t0.message);setError(_context.t0.message);setIsPending(false);}case 12:case\"end\":return _context.stop();}}},_callee,null,[[2,9]]);}));return function logout(){return _ref.apply(this,arguments);};}();useEffect(function(){return function(){return setIsCancelled(true);};},[]);return{logout:logout,error:error,isPending:isPending};};","map":{"version":3,"sources":["C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/src/hooks/useLogout.tsx"],"names":["useState","useEffect","useAuthContext","prjAuth","useLogout","error","setError","isPending","setIsPending","dispatch","isCancelled","setIsCancelled","logout","signOut","type","console","log","message"],"mappings":"gbAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,cAA0BJ,QAAQ,CAAC,IAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAkCN,QAAQ,CAAC,KAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eACA,oBAA0BN,cAAc,EAAxC,CAAQO,QAAR,iBAAQA,QAAR,CACA,eAAsCT,QAAQ,CAAC,KAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,MAAM,0FAAG,mIACbN,QAAQ,CAAC,IAAD,CAAR,CACAE,YAAY,CAAC,IAAD,CAAZ,CAFa,sCAMLL,CAAAA,OAAO,CAACU,OAAR,EANK,QAQXJ,QAAQ,CAAC,CAAEK,IAAI,CAAE,QAAR,CAAD,CAAR,CAEA;AACA,GAAI,CAACJ,WAAL,CAAiB,CACjBF,YAAY,CAAC,KAAD,CAAZ,CACAF,QAAQ,CAAC,IAAD,CAAR,CACC,CAdU,+EAiBT,GAAI,CAACI,WAAL,CAAiB,CACbK,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB,EACAX,QAAQ,CAAC,YAAIW,OAAL,CAAR,CACAT,YAAY,CAAC,KAAD,CAAZ,CACH,CArBQ,oEAAH,kBAANI,CAAAA,MAAM,0CAAZ,CAyBAX,SAAS,CAAC,UAAM,CACd,MAAO,kBAAMU,CAAAA,cAAc,CAAC,IAAD,CAApB,EAAP,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,MAAO,CAAEC,MAAM,CAANA,MAAF,CAAUP,KAAK,CAALA,KAAV,CAAiBE,SAAS,CAATA,SAAjB,CAAP,CACD,CApCM","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\nimport { prjAuth } from '../firebase/configfirebase'\r\n\r\nexport const useLogout = () => {\r\n  const [error, setError] = useState(null)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { dispatch }: any = useAuthContext()\r\n  const [isCancelled, setIsCancelled] = useState(false)\r\n  \r\n  const logout = async () => {\r\n    setError(null)\r\n    setIsPending(true)\r\n\r\n    try {\r\n      // delogare user\r\n      await prjAuth.signOut()\r\n      \r\n      dispatch({ type: 'LOGOUT' })\r\n\r\n      //update\r\n      if (!isCancelled){\r\n      setIsPending(false)\r\n      setError(null)\r\n      }\r\n    } \r\n    catch(err) {\r\n        if (!isCancelled){\r\n            console.log(err.message)\r\n            setError(err.message)\r\n            setIsPending(false)\r\n        }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => setIsCancelled(true)\r\n  }, [])\r\n\r\n  return { logout, error, isPending }\r\n}"]},"metadata":{},"sourceType":"module"}