{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\FACULTATE\\\\AN 3\\\\React Angular\\\\proiect-fe2\\\\src\\\\context\\\\AuthContext.tsx\",\n    _s = $RefreshSig$();\n\n//https://kentcdodds.com/blog/how-to-use-react-context-effectively\nimport { createContext, useReducer, useEffect } from 'react'; //import * as React from 'react'\n\nimport { prjAuth } from '../firebase/configfirebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(''); //export const AuthContext = React.createContext()\n\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    case 'ALREADY_LOGGED':\n      return { ...state,\n        user: action.payload,\n        authIsReady: true\n      };\n\n    default:\n      return state;\n  }\n};\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null,\n    alreadyLogged: false\n  });\n  useEffect(() => {\n    const unsub = prjAuth.onAuthStateChanged(user => {\n      dispatch({\n        type: 'ALREADY_LOGGED',\n        payload: user\n      });\n      unsub();\n    });\n  }, []);\n  console.log('AuthContext state:', state);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"OztVrIFdOwOPpkfVxKD0LPRqvBM=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/src/context/AuthContext.tsx"],"names":["createContext","useReducer","useEffect","prjAuth","AuthContext","authReducer","state","action","type","user","payload","authIsReady","AuthContextProvider","children","dispatch","alreadyLogged","unsub","onAuthStateChanged","console","log"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC,C,CACP;;AAEA,OAAO,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACtD,UAAQA,MAAM,CAACC,IAAf;AACM,SAAK,OAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAAzB,OAAP;;AACJ,SAAK,QAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYG,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACJ,SAAK,gBAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAAzB;AAAkCC,QAAAA,WAAW,EAAE;AAA/C,OAAP;;AACJ;AACI,aAAOL,KAAP;AARV;AAUD,CAXM;AAaP,OAAO,MAAMM,mBAAmB,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACxD,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,UAAU,CAACI,WAAD,EAAc;AAChDI,IAAAA,IAAI,EAAE,IAD0C;AAEhDM,IAAAA,aAAa,EAAE;AAFiC,GAAd,CAApC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGb,OAAO,CAACc,kBAAR,CAA2BR,IAAI,IAAI;AAC/CK,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,gBAAR;AAA0BE,QAAAA,OAAO,EAAED;AAAnC,OAAD,CAAR;AACAO,MAAAA,KAAK;AACN,KAHa,CAAd;AAID,GALQ,EAKN,EALM,CAAT;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCb,KAAlC;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGA,KAAL;AAAYQ,MAAAA;AAAZ,KAA7B;AAAA,cACID;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArBM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["//https://kentcdodds.com/blog/how-to-use-react-context-effectively\r\nimport { createContext, useReducer, useEffect } from 'react'\r\n//import * as React from 'react'\r\nimport { prjAuth } from '../firebase/configfirebase'\r\nexport const AuthContext = createContext('')\r\n//export const AuthContext = React.createContext()\r\n\r\nexport const authReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n        case 'LOGIN':\r\n            return { ...state, user: action.payload }\r\n        case 'LOGOUT':\r\n            return { ...state, user: null }\r\n        case 'ALREADY_LOGGED':\r\n            return { ...state, user: action.payload, authIsReady: true }\r\n        default:\r\n            return state\r\n  }\r\n}\r\n\r\nexport const AuthContextProvider = ({ children }: any) => {\r\n  const [state, dispatch] = useReducer(authReducer, { \r\n    user: null,\r\n    alreadyLogged: false\r\n  })\r\n  \r\n  useEffect(() => {\r\n    const unsub = prjAuth.onAuthStateChanged(user => {\r\n      dispatch({ type: 'ALREADY_LOGGED', payload: user })\r\n      unsub()\r\n    })\r\n  }, [])\r\n\r\n  console.log('AuthContext state:', state)\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ ...state, dispatch }}>\r\n      { children }\r\n    </AuthContext.Provider>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}