{"ast":null,"code":"var _s = $RefreshSig$();\n\n//import { isPending } from \"@reduxjs/toolkit\"\nimport { useState } from \"react\";\nimport { prjAuth } from \"../firebase/configfirebase\";\nexport const useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n\n  const signup = async (email, password, displayName) => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      const res = await prjAuth.createUserWithEmailAndPassword(email, password);\n      console.log(res.user);\n\n      if (!res) {\n        throw new Error('Signup Failed');\n      }\n\n      await res.user.updateProfile({\n        displayName: displayName\n      });\n      setIsPending(false);\n      setError(null);\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n      setIsPending(false);\n    }\n  };\n\n  return {\n    error,\n    isPending,\n    signup\n  };\n};\n\n_s(useSignup, \"Xx+Ls1iTZeKXvnE9hNj90tAFAxI=\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/src/hooks/useSignup.tsx"],"names":["useState","prjAuth","useSignup","error","setError","isPending","setIsPending","signup","email","password","displayName","res","createUserWithEmailAndPassword","console","log","user","Error","updateProfile","err","message"],"mappings":";;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,MAAM,GAAG,OAAOC,KAAP,EAAmBC,QAAnB,EAAkCC,WAAlC,KAAuD;AAClEN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAG;AACC,YAAMK,GAAG,GAAG,MAAMV,OAAO,CAACW,8BAAR,CAAuCJ,KAAvC,EAA8CC,QAA9C,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;;AAEA,UAAG,CAACJ,GAAJ,EAAQ;AACJ,cAAM,IAAIK,KAAJ,CAAU,eAAV,CAAN;AACH;;AAED,YAAML,GAAG,CAACI,IAAJ,CAASE,aAAT,CAAuB;AAACP,QAAAA,WAAW,EAAEA;AAAd,OAAvB,CAAN;AAEAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAZD,CAaA,OAAMc,GAAN,EAAU;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,OAAhB;AACAf,MAAAA,QAAQ,CAACc,GAAG,CAACC,OAAL,CAAR;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAtBD;;AAwBA,SAAO;AAAEH,IAAAA,KAAF;AAASE,IAAAA,SAAT;AAAoBE,IAAAA;AAApB,GAAP;AACH,CA7BM;;GAAML,S","sourcesContent":["//import { isPending } from \"@reduxjs/toolkit\"\r\nimport { useState } from \"react\"\r\nimport { prjAuth } from \"../firebase/configfirebase\"\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null)\r\n    const [isPending, setIsPending] = useState(false)\r\n\r\n    const signup = async (email: any, password: any, displayName: any) => {\r\n        setError(null)\r\n        setIsPending(true)\r\n\r\n        try{\r\n            const res = await prjAuth.createUserWithEmailAndPassword(email, password)\r\n            console.log(res.user)\r\n\r\n            if(!res){\r\n                throw new Error('Signup Failed')\r\n            }\r\n\r\n            await res.user.updateProfile({displayName: displayName })\r\n\r\n            setIsPending(false)\r\n            setError(null)\r\n        }\r\n        catch(err){\r\n            console.log(err.message)\r\n            setError(err.message)\r\n            setIsPending(false)\r\n        }\r\n    }\r\n\r\n    return { error, isPending, signup}\r\n}"]},"metadata":{},"sourceType":"module"}