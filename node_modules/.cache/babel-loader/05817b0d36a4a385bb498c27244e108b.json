{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { prjAuth } from '../firebase/configfirebase';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const login = async () => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      // login\n      const res = await prjAuth.signInWithEmailAndPassword(email, password);\n      dispatch({\n        type: 'LOGIN',\n        payload: res.user\n      });\n\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n  return {\n    login,\n    isPending,\n    error\n  };\n};\n\n_s(useLogin, \"gq0spg3Vd3Z/PhvHXIdTM4icHUg=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/src/hooks/useLogin.tsx"],"names":["useState","useEffect","prjAuth","useAuthContext","useLogin","isCancelled","setIsCancelled","error","setError","isPending","setIsPending","dispatch","login","res","signInWithEmailAndPassword","email","password","type","payload","user","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAoBR,cAAc,EAAxC;;AAEA,QAAMS,KAAK,GAAG,YAAY;AACxBJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF;AACA,YAAMG,GAAG,GAAG,MAAMX,OAAO,CAACY,0BAAR,CAAmCC,KAAnC,EAA0CC,QAA1C,CAAlB;AAEAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAA9B,OAAD,CAAR;;AAEA,UAAI,CAACd,WAAL,EAAkB;AAChBK,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAVD,CAWA,OAAMY,GAAN,EAAW;AACT,UAAI,CAACf,WAAL,EAAkB;AAChBG,QAAAA,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;AACAX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;AACF,GArBD;;AAuBAT,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAMK,cAAc,CAAC,IAAD,CAA3B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEM,IAAAA,KAAF;AAASH,IAAAA,SAAT;AAAoBF,IAAAA;AAApB,GAAP;AACD,CAlCM;;GAAMH,Q;UAIeD,c","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { prjAuth } from '../firebase/configfirebase' \r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useLogin = () => {\r\n  const [isCancelled, setIsCancelled] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const { dispatch }: any = useAuthContext()\r\n\r\n  const login = async () => {\r\n    setError(null)\r\n    setIsPending(true)\r\n  \r\n    try {\r\n      // login\r\n      const res = await prjAuth.signInWithEmailAndPassword(email, password)\r\n\r\n      dispatch({ type: 'LOGIN', payload: res.user })\r\n\r\n      if (!isCancelled) {\r\n        setIsPending(false)\r\n        setError(null)\r\n      }\r\n    } \r\n    catch(err) {\r\n      if (!isCancelled) {\r\n        setError(err.message)\r\n        setIsPending(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => setIsCancelled(true)\r\n  }, [])\r\n\r\n  return { login, isPending, error }\r\n}"]},"metadata":{},"sourceType":"module"}