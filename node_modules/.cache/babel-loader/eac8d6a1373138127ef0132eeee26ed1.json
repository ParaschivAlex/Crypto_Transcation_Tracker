{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { prjFirestore } from \"../firebase/configfirebase\";\nexport const useCollection = collection => {\n  _s();\n\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let ref = prjFirestore.collection(collection);\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({ ...doc.data(),\n          id: doc.id\n        });\n      }); // update state\n\n      setDocuments(results);\n      setError(null);\n    }, error => {\n      console.log(error);\n      setError('could not fetch the data');\n    }); // unsubscribe on unmount\n\n    return () => unsubscribe();\n  }, [collection]);\n  return {\n    documents,\n    error\n  };\n};\n\n_s(useCollection, \"j86V0YDN8yJdoPQs/2hLiWCj9Cg=\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/FACULTATE/AN 3/React Angular/proiect-fe2/src/hooks/useCollection.tsx"],"names":["useEffect","useState","prjFirestore","useCollection","collection","documents","setDocuments","error","setError","ref","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","data","id","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAqB;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEJD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,GAAG,GAAGP,YAAY,CAACE,UAAb,CAAwBA,UAAxB,CAAV;AAEA,UAAMM,WAAW,GAAGD,GAAG,CAACE,UAAJ,CAAeC,QAAQ,IAAI;AAC7C,UAAIC,OAAyB,GAAG,EAAhC;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;AAC3BH,QAAAA,OAAO,CAACI,IAAR,CAAa,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAxB,SAAb;AACD,OAFD,EAF6C,CAM7C;;AACAb,MAAAA,YAAY,CAACO,OAAD,CAAZ;AACAL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KATmB,EASjBD,KAAK,IAAI;AACVa,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAC,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACD,KAZmB,CAApB,CAHY,CAiBZ;;AACA,WAAO,MAAME,WAAW,EAAxB;AAED,GApBM,EAoBJ,CAACN,UAAD,CApBI,CAAT;AAsBE,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACD,CA3BM;;GAAMJ,a","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { prjFirestore } from \"../firebase/configfirebase\"\r\n\r\nexport const useCollection = (collection: any) => {\r\n    const [documents, setDocuments] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\nuseEffect(() => {\r\n    let ref = prjFirestore.collection(collection)\r\n\r\n    const unsubscribe = ref.onSnapshot(snapshot => {\r\n      let results: { id: string }[] = []\r\n      snapshot.docs.forEach(doc => {\r\n        results.push({...doc.data(), id: doc.id})\r\n      });\r\n      \r\n      // update state\r\n      setDocuments(results)\r\n      setError(null)\r\n    }, error => {\r\n      console.log(error)\r\n      setError('could not fetch the data')\r\n    })\r\n\r\n    // unsubscribe on unmount\r\n    return () => unsubscribe()\r\n\r\n  }, [collection])\r\n\r\n  return { documents, error }\r\n}"]},"metadata":{},"sourceType":"module"}